#--------------------------------------------------------------------------
# ! The Docker Compose file is configured for local environments.
# ! Do not deploy the Goravel sample in production environments.
#--------------------------------------------------------------------------

# Docker compose version - https://docs.docker.com/compose/compose-file
version: "3.9"

# Sets the project name.
name: playground

# The Docker services.
services:
  # The Goravel app container.
  goravel:
    # Build the Docker image from the Dockerfile.
    build:
      context: '.'
    image: goravel:latest
    container_name: ${APP_CONTAINER_NAME:-goravel_app}
    depends_on:
      - mysql
      - redis
    networks:
      - local
    # Map the app container exposed port to the host port.
    ports:
      - ${APP_PORT:-80}:${APP_PORT:-80}
    tty: true
    volumes:
      - .${CODE_DIR:-/code}:/app
    working_dir: /app
    # Run the goravel app container Shell.
    command: ["air"]

  # The MySQL database container.
  mysql:
    # https://hub.docker.com/_/mysql
    image: mysql:latest
    container_name: "${MYSQL_CONTAINER_NAME:-goravel_db}"
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: "${MYSQL_DATABASE:-goravel}"
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p"]
      retries: 3
      timeout: 5s
    networks:
      - local
    # Enable platform for Apple Silicon.
    platform: linux/x86_64
    # Map the database container exposed port to the host port.
    ports:
     - ${MYSQL_PORT:-3306}:3306
    volumes:
      - mysql_data:/var/lib/mysql

  # The Redis container.
  redis:
    # https://hub.docker.com/_/redis
    image: redis:alpine
    container_name: "${REDIS_CONTAINER_NAME:-goravel_redis}"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      retries: 3
      timeout: 5s
    networks:
      - local
    # Map the Redis container exposed port to the host port.
    ports:
      - ${REDIS_PORT:-6379}:6379
    volumes:
      - redis_data:/data

# The Docker networks.
networks:
  local:
    driver: "bridge"
    name: "${NETWORK_NAME:-goravel_local}"

# The Docker volumes.
volumes:
  mysql_data:
    driver: "local"
    name: "${MYSQL_CONTAINER_NAME:-goravel_db_data}"
  redis_data:
    driver: "local"
    name: "${REDIS_VOLUME_NAME:-goravel_redis_data}"
