#--------------------------------------------------------------------------
# ! The Docker Compose file is configured for local environments.
# ! Do not deploy the ApostropheCMS sample in production environments.
#--------------------------------------------------------------------------

# Docker compose version - https://docs.docker.com/compose/compose-file
version: "3.9"

# Sets the project name.
name: playground

# The Docker services.
services:
  # The ApostropheCMS app container.
  apostrophe:
    # Build the Docker image from the Dockerfile.
    build:
      context: '.'
    image: apostrophe:latest
    container_name: ${APP_CONTAINER_NAME:-apostrophe_app}
    depends_on:
      - mongodb
    # https://v3.docs.apostrophecms.org/reference/modules/db.html#options
    environment:
      APOS_MONGODB_URI: mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb:27017
    networks:
      - local
    # Map the app container exposed port to the host port.
    ports:
      - ${APP_PORT:-80}:3000
    tty: true
    volumes:
      - .${CODE_DIR:-/code}:/app
    working_dir: /app
    # Start The Apostrophe CLI dev server.
    # https://v2.docs.apostrophecms.org/getting-started/apostrophe-cli.html
    command: ["yarn", "run", "dev"]

  # The MongoDB database container.
  mongodb:
    # https://hub.docker.com/_/mongo
    image: mongo:latest
    container_name: "${MONGO_CONTAINER_NAME:-apostrophe_mongodb}"
    # https://hub.docker.com/_/mongo
    # Go to Configuration -> Environment variables.
    environment:
      MONGO_INITDB_DATABASE: "${MONGO_DATABASE:-apostrophe}"
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_PASSWORD}"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongodb:27017/test --quiet
      retries: 3
      timeout: 5s
    networks:
      - local
    # Map the database container exposed port to the host port.
    ports:
      - ${MONGO_PORT:-27017}:27017
    volumes:
      - mongodb_data:/data/db

# The Docker networks.
networks:
  local:
    driver: "bridge"
    name: "${NETWORK_NAME:-apostrophe_local}"

# Docker volumes
volumes:
  mongodb_data:
    driver: "local"
    name: "${MONGO_VOLUME_NAME:-apostrophe_mongodb_data}"
