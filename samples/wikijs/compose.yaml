#--------------------------------------------------------------------------
# ! The Docker Compose file is configured for local environments.
# ! Do not deploy the Wiki.js sample in production environments.
#--------------------------------------------------------------------------

# Docker compose version - https://docs.docker.com/compose/compose-file
version: "3.9"

# Sets the project name.
name: playground

# The Docker services.
services:
  # The Wiki.js app container.
  wikijs:
    # https://hub.docker.com/_/node
    image: node:16
    container_name: ${APP_CONTAINER_NAME:-wikijs_app}
    depends_on:
      - mysql
    environment:
      DB_HOST: mysql
      DB_PORT: ${DB_PORT:-3306}
      DB_USER: "${DB_USERNAME}"
      DB_PASS: "${DB_PASSWORD}"
      DB_NAME: "${DB_DATABASE:-wikijs}"
    networks:
      - local
    # Map the app container exposed port to the host port.
    ports:
      - ${APP_PORT:-80}:3000
    volumes:
      - .${CODE_DIR:-/code}:/app
    working_dir: /app
    # Start the Wiki.js dev server.
    command: ['yarn', 'run', 'dev']

  # The MySQL database container.
  mysql:
    # https://hub.docker.com/_/mysql
    image: mysql:latest
    container_name: ${DB_CONTAINER_NAME:-wikijs_db}
    # https://hub.docker.com/_/mysql
    # Go to Environment variables.
    environment:
      MYSQL_DATABASE: "${DB_DATABASE:-wikijs}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-u", "root"]
      retries: 3
      timeout: 5s
    networks:
      - local
    platform: linux/x86_64
    # Map the database container exposed port to the host port.
    ports:
     - ${DB_PORT:-3306}:3306
    volumes:
      - mysql_data:/var/lib/mysql

# The Docker networks.
networks:
  local:
    driver: "bridge"
    name: "${NETWORK_NAME:-wikijs_local}"

# The Docker volumes.
volumes:
  mysql_data:
    driver: "local"
    name: "${DB_VOLUME_NAME:-wikijs_db_data}"
